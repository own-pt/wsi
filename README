# -*- mode:org -*-
#+TITLE: WeSearch Infrastructure (WSI)

original implementation and demos [[http://wesearch.delph-in.net/][here]] (or see [[https://github.com/own-pt/wsi/commit/e403240130ffdbcd58b6efa635ed1e81e8d3ae94][first commit]]).

* how to run
: docker run -v /home/odanoburu/work/data/:/home/milen/data/ -e WSI_INDEX_FORMATS='mrs,eds' -e WSI_PATH_TO_INDEX='/home/milen/data/repsol.gz' -it --rm -p 9897:9897 wsi

** explanation
- you must mount a volume so that docker has access to the files you
  want to search ;
- =WSI_INDEX_FORMATS= is a comma-separated list of the formats that
  the WSI is to provide (you choose at least one of
  =conll,eds,mrs,dm,pas,psd=).
- =WSI_PATH_TO_INDEX= this is the path to the file or directory of
  files you want to index. Be sure to pass the path like in the
  example, i.e., absolute and in the container (i.e., don't pass the
  local path, but the one in the container)

* how to generate appropriate input files
We recommend following the tutorial (and links) in [[http://moin.delph-in.net/ErgProcessing][this page]]. If you
have the [[http://moin.delph-in.net/LogonTop][LOGON]] distribution installed and properly configured, it is a
matter of:

- parsing:
  : cd $LOGONROOT
  : ./parse --binary --erg+tnt --best 1 --count 4 --text input.txt
  where =input.txt= is a file with newline-separated sentences, and
  =4= is the number of parallel processes you want to use.

- generating MRSs, EDSs:
  #+BEGIN_SRC sh
    ./redwoods --binary --erg --default --composite --target /tmp \
               --export mrs,eds --active all \
               erg/1214/input/16-05-23/pet
  #+END_SRC
  where =input= is the file name (extension-stripped) and =16-05-23=
  is the date when the input was processed. Your output files will be
  at =/tmp/=.

* how to install
- install docker;

- build docker file:
  : cd docker
  : docker build -t wsi .

** no docker
See =README-old.txt=.
